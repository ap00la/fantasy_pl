#%% Imports
import requests
import json
import time
import asyncio
import json
import aiohttp
from understat import Understat
import httpx

#%% Get player hist

async def get_player_hist(player_ids, url='https://fantasy.premierleague.com/api/element-summary/', save_to_file=True):
    ''''
    Retrive fixtures, season so far data, and historical data 
    '''

    async with httpx.AsyncClient() as client:
        tasks = (client.get(url + str(player_id) + '/') for player_id in player_ids)
        responses = await asyncio.gather(*tasks)

    # dict of dicts with player ID as key
    data = {int((str(response.url)).split('/')[-2]):response.json() for response in responses}

    if save_to_file:
        with open('.data/history.json', 'w') as outf:
            json.dump(data, outf)

    return data


#%% main()

def main():
    data = asyncio.run(get_player_hist(player_ids=[1,283,32,44,5]))
    print(data.values())
#%% If name main
if __name__ == '__main__':
    main()

